#
# PyRedirector
#
# A URL redirector for managing servers running on non-standard ports
# and without DNS on small and homelab networks. Written in Python.
# with Gunicorn config script to handle the WSGI frontend.
#
# Refer to project homepage https://github.com/kspillane/pyredirector
# for more information and to submit issues. Available under the MIT
# license. Refer to LISENCE file for details.
#
# Copyright Kyle Spillane - spillman@gmail.com
#
#
# This file contains the gunicorn configuration file. It changes the
# working director and then gets the current bind address and port
# from the current configration file or the defaults if this is first
# run. This is done so we can restart the flask framework if the bind
# address or port change
#

import os, sys

# Since gunicorn is install in /usr/local/bin the Python path will
# set that as the working directory. We change it to the directory
# the program files are in so it can import the module.

path = os.path.abspath(os.path.dirname(__file__))
if not path in sys.path:
    sys.path.insert(1, path)
del path

import redirect

bind = redirect.load_bind()
workers = 1
worker_class = 'sync'
worker_connections = 1000
daemon = False
